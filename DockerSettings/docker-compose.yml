version: '3.8'

services:
  
  cache:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: [ "redis-server" ]
  
  mongoDb:
    image: mongo
    container_name: mongo_container
    ports:
      - "27017:27017"
  
  zookeeper:
    image: bitnami/zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
  
  kafka:
    image: bitnami/kafka:3.1.2
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    restart: always
  
  init-kafka:
    image: bitnami/kafka:3.1.2
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      kafka-topics.sh --create --topic analyze_results --bootstrap-server kafka:9092 --replication-factor 1 --partitions 4
      kafka-topics.sh --create --topic messages_to_analyze --bootstrap-server kafka:9092 --replication-factor 1 --partitions 4
      "
  
  telegram_bot_postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "course_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5433:5432"
  
  analyzer_postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "course_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
  
  analysis_storage_postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "course_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5434:5432"
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus/:/etc/prometheus/
      - ./data/prometheus/:/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  
  stream-data-analyzer:
    image: papolyanskaya/stream-data-analyzer:4012
    ports:
      - "7005:80"
      - "5005:8080"
    depends_on:
      - analyzer_postgres
      - init-kafka
      - cache
      - telegram_bot_postgres
      - analysis_storage_postgres
      - prometheus
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - Kestrel__Endpoints__Http__Url=http://[::]:80
      - Kestrel__Endpoints__Http__Protocols=Http1
      - Kestrel__Endpoints__gRPC__Url=http://[::]:8080
      - Kestrel__Endpoints__gRPC__Protocols=Http2
        
  analysis-result-storage:
    image: papolyanskaya/analysis-result-storage:3
    ports:
      - "7006:80"
      - "5006:8080"
    depends_on:
      - analyzer_postgres
      - init-kafka
      - cache
      - telegram_bot_postgres
      - analysis_storage_postgres
      - prometheus
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - Kestrel__Endpoints__Http__Url=http://[::]:80
      - Kestrel__Endpoints__Http__Protocols=Http1
      - Kestrel__Endpoints__gRPC__Url=http://[::]:8080
      - Kestrel__Endpoints__gRPC__Protocols=Http2
       
  data-sender:
    image: papolyanskaya/data-sender:7
    ports:
      - "7008:80"
      - "5008:8080"
    depends_on:
      - analyzer_postgres
      - init-kafka
      - cache
      - telegram_bot_postgres
      - analysis_storage_postgres
      - prometheus
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - Kestrel__Endpoints__Http__Url=http://[::]:80
      - Kestrel__Endpoints__Http__Protocols=Http1
      - Kestrel__Endpoints__gRPC__Url=http://[::]:8080
      - Kestrel__Endpoints__gRPC__Protocols=Http2
  
  telegram-bot:
    image: papolyanskaya/telegram-bot:4
    ports:
      - "7007:80"
    depends_on:
      - analyzer_postgres
      - init-kafka
      - cache
      - telegram_bot_postgres
      - analysis_storage_postgres
      - prometheus
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - Kestrel__Endpoints__Http__Url=http://[::]:80
      - Kestrel__Endpoints__Http__Protocols=Http1